import { useState } from 'react';
import { motion } from 'framer-motion';
import { styled } from '@mui/material/styles';
import { Box, Container, Typography, Grid, IconButton } from '@mui/material';
import { Iconify } from 'src/components/iconify';
import MosaicScrollSection from '../RunningPhotosGrid';
import { Header } from './header';
import Footer from './Footer';
// import { SectionHeading } from '../shared/section-heading';

const VideoCard = styled(motion.div)(({ theme }) => ({
  // background: '#ffffff',
  borderRadius: theme.spacing(3),
  overflow: 'hidden',
  boxShadow: '0 0 40px rgba(0, 0, 0, 0.1)',
  border: '2px solid rgba(0, 0, 0, 0.1)',
  height: '100%',
  display: 'flex',
  flexDirection: 'column',
  transition: 'all 0.4s ease',
  '&:hover': {
    transform: 'translateY(-8px)',
    boxShadow: '0 30px 60px -12px rgba(0, 0, 0, 0.12)',
  }
}));

const VideoWrapper = styled(Box)(({ theme }) => ({
  position: 'relative',
  paddingTop: '56.25%', // 16:9 Aspect Ratio
  width: '100%',
  '& iframe': {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    border: 'none',
  }
}));

const ContentBox = styled(Box)(({ theme }) => ({
  padding: theme.spacing(3),
  flex: 1,
  display: 'flex',
  flexDirection: 'column',
}));

const DescriptionBox = styled(Box)(({ theme }) => ({
  color: theme.palette.text.secondary,
  fontSize: '0.9rem',
  lineHeight: 1.8,
  overflow: 'hidden',
  transition: 'max-height 0.4s ease',
  maxHeight: 80,
  position: 'relative',
  marginBottom: theme.spacing(2),
  '&.expanded': {
    maxHeight: '1000px',
  },
  '&:after': {
    content: '""',
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: '40px',
    background: 'linear-gradient(to top, #ffffff, transparent)',
  },
  '&.expanded:after': {
    height: 0,
  }
}));



const ReadMoreButton = styled(Box)(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  gap: theme.spacing(1),
  color: "#000000",
  fontSize: '0.9rem',
  fontWeight: 600,
  cursor: 'pointer',
  transition: 'all 0.3s ease',
  marginTop: 'auto',
  '&:hover': {
    color: "#000000",
  }
}));

export const videos = [
  {
    id: 'FzR_TIGtNPE',
    title: 'Th√°nh ca 290 - N∆Ø∆†NG C√ÅNH Vƒ®NH SINH | Hynms',
    description: 'M·ªói khi ƒë√†n b√†i "N∆∞∆°ng C√°nh Vƒ©nh Sinh", m√¨nh c·∫£m nh·∫≠n ƒë∆∞·ª£c s·ª± b√¨nh an l·∫° th∆∞·ªùng. Giai ƒëi·ªáu nh·∫π nh√†ng nh∆∞ ƒë√¥i c√°nh thi√™n th·∫ßn, n√¢ng t√¢m h·ªìn ta v∆∞·ª£t l√™n tr√™n nh·ªØng lo toan th∆∞·ªùng nh·∫≠t. Qua ti·∫øng ƒë√†n guitar, m√¨nh mong ƒë∆∞·ª£c chia s·∫ª c·∫£m x√∫c thi√™ng li√™ng v√† s·ª± b√¨nh an n√†y ƒë·∫øn v·ªõi m·ªçi ng∆∞·ªùi. üïäÔ∏è'
  },
  {
    id: 'a9UkboylqhY',
    title: 'Th√°nh Ca 704 - NG√ÄI L√Ä T·∫§T C·∫¢ CHO T√îI | Hymns',
    description: '"Ng√†i L√† T·∫•t C·∫£ Cho T√¥i" - m·ªôt b√†i h√°t ƒë·∫∑c bi·ªát v·ªõi m√¨nh. M·ªói n·ªët nh·∫°c nh∆∞ m·ªôt l·ªùi t√¢m s·ª±, m·ªôt l·ªùi t·∫° ∆°n s√¢u s·∫Øc. Khi ƒë√†n b√†i n√†y, m√¨nh lu√¥n nh·ªõ ƒë·∫øn nh·ªØng kho·∫£nh kh·∫Øc ƒë∆∞·ª£c Ch√∫a d√¨u d·∫Øt trong cu·ªôc s·ªëng. Hy v·ªçng giai ƒëi·ªáu n√†y s·∫Ω ch·∫°m ƒë·∫øn tr√°i tim c·ªßa nh·ªØng ai ƒëang l·∫Øng nghe. üôè'
  },
  {
    id: 'dq5YepwJHFM',
    title: 'Th√°nh ca 325 - G√ÅNH L√öA V·ªÄ | Hymns',
    description: 'M·ªói b√†i Th√°nh Ca l√† m·ªôt l·ªùi c·∫ßu nguy·ªán, m·ªôt s·ª± t·∫° ∆°n. "G√°nh L√∫a V·ªÅ" - m·ªôt kh√∫c nh·∫°c ƒë∆°n s∆° v·ªÅ ni·ªÅm vui c·ªßa m√πa g·∫∑t, v·ªÅ nh·ªØng hy v·ªçng v√† ƒë·ª©c tin. Qua ti·∫øng ƒë√†n guitar, t√¥i mu·ªën chia s·∫ª c·∫£m x√∫c thi√™ng li√™ng v√† b√¨nh an n√†y ƒë·∫øn v·ªõi m·ªçi ng∆∞·ªùi...'
  },
  {
    id: 'sy-6XYYzgfA',
    title: 'November /orig. Â≤∏ÈÉ®ÁúûÊòé (Masaaki Kishibe) - Vulee',
    description: 'Th√°ng 11 - khi nh·ªØng chi·∫øc l√° cu·ªëi c√πng c·ªßa m√πa thu nh·∫π nh√†ng r∆°i. B·∫£n nh·∫°c c·ªßa Masaaki Kishibe nh∆∞ m·ªôt b·ª©c tranh √¢m nh·∫°c, v·∫Ω n√™n khung c·∫£nh c·ªßa m·ªôt ng√†y cu·ªëi thu tƒ©nh l·∫∑ng. M·ªói n·ªët nh·∫°c, m·ªói giai ƒëi·ªáu ƒë·ªÅu mang ƒë·∫øn nh·ªØng c·∫£m x√∫c tinh t·∫ø, s√¢u l·∫Øng...'
  },
  {
    id: 'TMhzgkeln0Y',
    title: 'TR·ªúI S√ÅNG R·ªíI - NGUY√äN H√Ä (OST TR·ªúI S√ÅNG R·ªíI, TA NG·ª¶ ƒêI TH√îI)„ÄåACOUSTIC VERSION„Äç',
    description: 'N·∫øu b·∫°n ƒë·ªôc th√¢n, th·∫≠t t·ªët v√¨ b·∫°n t·ª± do. C√≥ r·∫•t nhi·ªÅu ng∆∞·ªùi ƒëang ch·ªù ƒë·ªÉ l√†m quen. C√≥ m·ªôt l√†n s∆∞∆°ng m·ªèng ƒëang ch·ªù ·ªü ƒë√¢u ƒë√≥. C√≥ m·ªôt kho·∫£nh kh·∫Øc ƒë·ªÉ h·ªçc h·ªèi v√† y√™u b·∫£n th√¢n m√¨nh. Th·∫ø gi·ªõi bao la r·ªông l·ªõn ƒëang ch·ªù b·∫°n kh√°m ph√°. Cho ƒë·∫øn m·ªôt ng√†y n√†o ƒë√≥ khi b·∫°n ƒë·ªß m·∫°nh m·∫Ω ƒë·ªÉ y√™u b·∫£n th√¢n m√¨nh ƒë·ªß ƒë·ªÅ √¥m l·∫•y m·ªôt ai ƒë√≥, b·∫°n s·∫Ω gi·ªØ h·ªç nh∆∞ b·∫°n ƒë√£ d√†nh th·ªùi gian qua ƒë·ªÉ y√™u b·∫£n th√¢n...'
  },
  {
    id: 'DtP2XNgnam4',
    title: '#EdSheeran PERFECT - ED SHEERAN - Fingerstyle Guitar Cover - by Vu Le',
    description: '"Perfect" - m·ªôt t√¨nh kh√∫c v·ªÅ t√¨nh y√™u ho√†n h·∫£o. Qua nh·ªØng n·ªët nh·∫°c fingerstyle, t√¥i mu·ªën truy·ªÅn t·∫£i c√¢u chuy·ªán v·ªÅ m·ªôt t√¨nh y√™u ƒë·∫πp ƒë·∫Ω, thu·∫ßn khi·∫øt. Khi √¢m nh·∫°c l√† c·∫ßu n·ªëi c·ªßa nh·ªØng tr√°i tim, m·ªói giai ƒëi·ªáu ƒë·ªÅu mang theo m·ªôt th√¥ng ƒëi·ªáp y√™u th∆∞∆°ng...'
  }
];
const HeroText = styled(motion.h1)(({ theme }) => ({
  fontSize: 'clamp(8rem, 5vw, 18rem)',
  fontWeight: 800,
  lineHeight: 0.8,
  letterSpacing: '-0.02em',
  margin: 0,
  textAlign: 'center',
  color: '#000',
  position: 'relative',
  textTransform: 'uppercase',
  zIndex: 3,
}));
export function YoutubeSection() {
  const [expandedCards, setExpandedCards] = useState<string[]>([]);
  const [isPlaying, setIsPlaying] = useState(true);
  const toggleDescription = (videoId: string) => {
    setExpandedCards(prev =>
      prev.includes(videoId)
        ? prev.filter(id => id !== videoId)
        : [...prev, videoId]
    );
  };


  return (
    <Box >
      <Header />
      <Box>
        <div className="section" >
          <Box
            sx={{
              height: '100vh',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              px: 2,
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Add motion here */}
            <motion.div
              initial={{ opacity: 0, y: 100 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, ease: 'easeOut' }}
              viewport={{ once: true, amount: 0.4 }} // Only animate once when 40% visible
              style={{
                width: '100%',
              }}
            >
              <HeroText
               
              >
                GUITAR
              </HeroText>
            </motion.div>
          </Box>
        </div>
        {/* <MosaicScrollSection /> */}
        <Grid container spacing={4} sx={{
          m: 7}}>
          {videos.map((video, index) => (
            <Grid size={{ xs: 12, sm: 6, md: 4 }} key={video.id}>
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: index * 0.2 }}
                viewport={{ once: true }}
              >
                <VideoCard>
                  <VideoWrapper>
                    <iframe
                      src={`https://www.youtube.com/embed/${video.id}`}
                      title={video.title}
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                      allowFullScreen
                    />
                  </VideoWrapper>

                  <ContentBox>
                    <Typography
                      variant="h6"
                      sx={{
                        fontWeight: 600,
                        fontSize: '1.1rem',
                        lineHeight: 1.4,
                        mb: 2,
                        height: '2.8rem',
                        overflow: 'hidden',
                        display: '-webkit-box',
                        WebkitLineClamp: 2,
                        WebkitBoxOrient: 'vertical',
                      }}
                    >
                      {video.title}
                    </Typography>

                    <DescriptionBox className={expandedCards.includes(video.id) ? 'expanded' : ''}>
                      {video.description}
                    </DescriptionBox>


                    <ReadMoreButton onClick={() => toggleDescription(video.id)}>
                      {/* <Iconify
                        icon={expandedCards.includes(video.id) ? "eva:chevron-up-fill" : "eva:chevron-down-fill"}
                        width={20}
                      /> */}
                      {expandedCards.includes(video.id) ? 'Thu g·ªçn' : 'Xem th√™m'}
                    </ReadMoreButton>
                  </ContentBox>
                </VideoCard>
              </motion.div>
            </Grid>
          ))}
        </Grid>
      </Box>
      <Footer />
    </Box>
  );
} 